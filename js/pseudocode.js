// Generated by CoffeeScript 1.11.1
var python2algo;

python2algo = function(source) {
  var algo;
  algo = source.replace(/\=/g, "←");
  algo = algo.replace(/←←/g, "=");
  algo = algo.replace(/>←/g, "≥");
  algo = algo.replace(/<←/g, "≤");
  algo = algo.replace(/!←/g, "≠");
  algo = algo.replace(/:/g, "");
  algo = algo.replace(/elif/g, "sinon, si ");
  algo = algo.replace(/if\s/g, "si ");
  algo = algo.replace(/else/g, "sinon ");
  algo = algo.replace(/for\s/g, "pour ");
  algo = algo.replace(/\snot\s/g, " on n'a pas ");
  algo = algo.replace(/\sand\s/g, " et ");
  algo = algo.replace(/\sor\s/g, " ou ");
  algo = algo.replace(/while\s/g, "Tant que ");
  algo = algo.replace(/\sin\srange\(([\w|\+\-\*\/]+),([\w|\+\-\*\/]+)\)/g, " allant de $1 à $2-1");
  algo = algo.replace(/\sin\srange\(([\w|\+\-\*\/]+)\)/g, " allant de 0 à $1-1");
  algo = algo.replace(/print/g, "afficher ");
  algo = algo.replace(/\sin\s/g, " dans ");
  algo = algo.replace(/\*\*2/g, "²");
  algo = algo.replace(/\*\*3/g, "³");
  algo = algo.replace(/float\('inf'\)/g, "+∞");
  algo = algo.replace(/float\('-inf'\)/g, "-∞");
  algo = algo.replace(/(\w+)\s*\+←/g, "augmenter $1 de ");
  algo = algo.replace(/(\w+)\s*\-←/g, "diminuer $1 de ");
  algo = algo.replace(/(\w+)\s*\*←/g, "multiplier $1 par ");
  algo = algo.replace(/(\w+)\s*\*\*←/g, "élever $1 à la puissance ");
  algo = algo.replace(/(\w+)\s*\/←/g, "diviser $1 par ");
  algo = algo.replace(/\*/g, "×");
  algo = algo.replace(/sqrt/g, "√");
  algo = algo.replace(/%\s*2\s*=\s*0/g, " est pair");
  algo = algo.replace(/def\s/g, "algorithme ");
  algo = algo.replace(/return\s/g, "renvoyer ");
  algo = algo.replace(/input/g, "entrer");
  algo = algo.replace(/choice/g, "prendre un élément au hasard dans");
  algo = algo.replace(/sample/g, "tirage sans remise");
  algo = algo.replace(/shuffle/g, "mélanger");
  algo = algo.replace(/randint/g, "entier au hasard");
  algo = algo.replace(/uniform/g, "variable aléatoire uniforme");
  algo = algo.replace(/expovariate/g, "variable aléatoire exponentielle de paramètre");
  algo = algo.replace(/gauss/g, "variable aléatoire normale de paramètres");
  algo = algo.replace(/left/g, "tourner vers la gauche de");
  algo = algo.replace(/right/g, "tourner vers la droite de");
  algo = algo.replace(/forward/g, "avancer de");
  algo = algo.replace(/backward/g, "reculer de");
  algo = algo.replace(/penup\(\)/g, "lever le crayon");
  algo = algo.replace(/pendown\(\)/g, "baisser le crayon");
  algo = algo.replace(/reset\(\)/g, "initialiser le graphisme tortue");
  algo = algo.replace(/setposition/g, "téléporter la tortue vers");
  algo = algo.replace(/write/g, "écrire");
  algo = algo.replace(/True/g, "vrai");
  algo = algo.replace(/False/g, "faux");
  algo = algo.replace(/××/g, "^");
  algo = algo.replace(/(\w+)\.count\((\w+)\)/g, "nombre d'occurences de $2 dans $1");
  algo = algo.replace(/(\w+)\.append\((\w+)\)/g, "insérer $2 à la fin de $1");
  algo = algo.replace(/(\w+)\.issubset\((\w+)\)/g, "$1 est inclus dans $2");
  algo = algo.replace(/(\w+)\.add\((\w+)\)/g, "ajouter $2 à l'ensemble $1");
  algo = algo.replace(/(\w+)\.union\((\w+)\)/g, "$1 ∪ $2");
  algo = algo.replace(/(\w+)\.intersection\((\w+)\)/g, "$1 ∩ $2");
  algo = algo.replace(/all\((\w+)\)/g, "∀x, $1(x)");
  algo = algo.replace(/any\((\w+)\)/g, "∃x, $1(x)");
  return algo;
};
