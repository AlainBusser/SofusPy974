// Generated by CoffeeScript 1.9.2
var editor, workspace;

workspace = void 0;

editor = ace.edit("editor");

$(function() {
  $.ajax({
    type: "GET",
    url: "js/vendor/blockly/keys/toolbox.xml",
    dataType: "xml",
    success: function(xml) {
      workspace = Blockly.inject('blocklyDiv', {
        media: "js/vendor/blockly/keys/media/",
        zoom: {
          controls: true,
          wheel: true,
          startScale: 1.1,
          maxScale: 3,
          minScale: 0.5,
          scaleSpeed: 1.2
        },
        toolbox: $(xml).find("#toolbox")[0]
      });
      Blockly.Msg.VARIABLES_SET = 'mettre %2 dans %1';
      Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = 'regrouper';
      editor.getSession().setUseSoftTabs(false);
      return editor.getSession().setMode('ace/mode/python');
    }
  });
  $("#blocklyDivToggle").on("click", function() {
    return plierDeplier($("#blocklyDiv"));
  });
  $(".toggleMode").on("click", function() {
    var texte;
    $("#pythonMode, #blocklyMode, .blocklyToolboxDiv").toggle();
    if ($("#pythonMode").is(":visible")) {
      texte = getPythonText();
      editor.setValue(tabuler(texte), -1);
      return editor.focus();
    }
  });
  $("button#d1").on("click", function() {
    workspace.clear();
    return $.ajax({
      type: "GET",
      url: "xml/demo1.xml",
      dataType: "xml",
      success: function(xml) {
        return Blockly.Xml.domToWorkspace($(xml).find("#demo1")[0], workspace);
      }
    });
  });
  Println('1) Il y a un exemple Blockly à tester...');
  return Println('2) Pour passer de Blockly à Python, cliquez sur le bouton Editeur...');
});
